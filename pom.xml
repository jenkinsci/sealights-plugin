<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>2.11</version>
        <relativePath />
    </parent>


    <groupId>io.sealights.plugins</groupId>
    <artifactId>sealights</artifactId>
    <version> 1.4.322-SNAPSHOT</version>
    <packaging>hpi</packaging>
    <name>SeaLights Continuous Testing Plugin</name>

    <properties>
        <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
        <jenkins.version>1.625.3</jenkins.version>
        <!-- Java Level to use. Java 7 required when using core >= 1.612 -->
        <java.level>7</java.level>
        <!-- Jenkins Test Harness version you use to test the plugin. -->
        <!-- For Jenkins version >= 1.580.1 use JTH 2.x or higher. -->
        <jenkins-test-harness.version>2.13</jenkins-test-harness.version>
        <!-- Other properties you may want to use:
             ~ hpi-plugin.version: The HPI MAVEN Plugin version used by the plugin..
             ~ stapler-plugin.version: The Stapler MAVEN plugin version required by the plugin.
        -->

        <sealights.version>1.3.176</sealights.version>
        <resources.folder>${basedir}/src/main/resources</resources.folder>
        <artifacts.folder>${resources.folder}/artifacts</artifacts.folder>
        <testng.version>6.1.1</testng.version>
        <mockito.version>1.10.19</mockito.version>
        <java.agent.infra.version>[3.0.0-SNAPSHOT],[3.0,)</java.agent.infra.version>
        <lombok.version>1.16.16</lombok.version>
    </properties>


    <description>SeaLights Continuous Testing Plugin allows for an easy integration of SeaLights to software projects.
    </description>
    <url>https://wiki.jenkins-ci.org/display/JENKINS/TODO+Plugin</url>

    <!-- The default licence for Jenkins OSS Plugins is MIT. Substitute for the applicable one if needed. -->

    <licenses>
        <license>
            <name>Sealights Jenkins License</name>
            <url>https://github.com/jenkinsci/sealights-plugin/blob/master/LICENSE.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>nadavye</id>
            <name>Nadav Yeheskel</name>
            <email>nadav@sealights.io</email>
            <organization>sealights</organization>
        </developer>
        <developer>
            <id>RoniSegal</id>
            <name>Roni Segal</name>
            <email>rsegal@sealights.io</email>
            <organization>sealights</organization>
        </developer>
    </developers>

    <!-- Required info in order to host on @jenkinsci:-->
     <scm>
      <connection>scm:git:https://${SL_GITHUB_USER}:${SL_GITHUB_PASSWORD}@github.com/jenkinsci/sealights-Plugin.git</connection>
      <developerConnection>scm:git:https://${SL_GITHUB_USER}:${SL_GITHUB_PASSWORD}@github.com/jenkinsci/sealights-Plugin.git</developerConnection>
      <url>http://github.com/jenkinsci/sealights-plugin</url>
      <tag>HEAD</tag>
  </scm>
     
    <repositories>
        <repository>
            <id>sealights-internal</id>
            <url>http://nex.sealights.co:8081/repository/sealights-internal</url>
        </repository>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>hudson.udp</name>
                                    <value>33849</value>
                                </property>
                            </systemProperties>
                            <!--<reuseForks>true</reuseForks>-->
                            <forkCount>1</forkCount>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>hudson.udp</name>
                            <value>33849</value>
                        </property>
                    </systemProperties>
                    <!--<reuseForks>true</reuseForks>-->
                    <forkCount>1</forkCount>
                </configuration>
            </plugin>
            <plugin>
                <!-- Build an executable JAR -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Implementation-Title>Sealights' Jenkins Plugin</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Vendor>Sealights Technologies</Implementation-Vendor>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>display-info</id>
                        <configuration>
                            <rules>
                                <enforceBytecodeVersion>
                                    <maxJdkVersion>1.${java.level}</maxJdkVersion>
                                    <excludes>
                                        <!-- These are original excludes, as in the parent pom. -->
                                        <exclude>org.jenkins-ci.main:jenkins-core</exclude>
                                        <exclude>org.jenkins-ci.main:cli</exclude>
                                        <exclude>org.jenkins-ci.main:jenkins-test-harness</exclude>
                                        <exclude>com.google.code.findbugs:annotations</exclude>

                                        <!-- Excluding these, as jackson's Java bytecode version is 1.6, documentation
                                        states support for 1.7, but the enforcer fails due to presence of a Java 9
                                        module class in the jackson JAR. -->
                                        <exclude>com.fasterxml.jackson.core:jackson-core:jar:2.11.1</exclude>
                                        <exclude>com.fasterxml.jackson.core:jackson-annotations:jar:2.11.1</exclude>
                                        <exclude>com.fasterxml.jackson.core:jackson-databind:jar:2.11.1</exclude>
                                    </excludes>
                                </enforceBytecodeVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.8.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.2.1</version>
        </dependency>
        <dependency>
            <groupId>io.sealights.on-premise.agents</groupId>
            <artifactId>java-agent-infra</artifactId>
            <version>${java.agent.infra.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sealights.agents.infra</groupId>
            <artifactId>pom-file-integration</artifactId>
            <version>${java.agent.infra.version}</version>
        </dependency>
        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-exec</artifactId>
            <version>1.10</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>


    <profiles>
        <profile>
            <id>download-jars</id>
            <build>
                <plugins>
                    <!-- ========================================================================================= -->
                    <!-- 1) Remove all previous JARs -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <executions>
                            <execution>
                                <id>clean-old-artifact</id>
                                <phase>clean</phase>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${resources.folder}</directory>
                                            <includes>
                                                <include>sl-build-scanner.jar</include>
                                                <include>sl-test-listener.jar</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ========================================================================================= -->
                    <!-- 2) Download zip file with SeaLights artifacts  -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>1.0</version>
                        <executions>
                            <execution>
                                <id>download-sealights</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>download-single</goal>
                                </goals>
                                <configuration>
                                    <url>https://s3.amazonaws.com</url>
                                    <fromFile>sl-repo/sealights-java/sealights-java-${sealights.version}.tgz</fromFile>
                                    <toDir>${resources.folder}</toDir>
                                    <toFile>${resources.folder}</toFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ========================================================================================= -->
                    <!-- 3) Unzip the file -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>prepare</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <target>
                                        <echo message="Unzipping SeaLights artifacts file." />
                                        <unzip src="${resources.folder}/sealights-java-${sealights.version}.tgz" dest="${resources.folder}/" />
                                        <echo message="Finished unzipping. Copying the files to the resources folder." />
                                        <copy file="${artifacts.folder}/sl-test-listener-${sealights.version}.jar" tofile="${resources.folder}/sl-test-listener.jar" />
                                        <copy file="${artifacts.folder}/sl-build-scanner-${sealights.version}.jar" tofile="${resources.folder}/sl-build-scanner.jar" />
                                        <echo message="Finished copying. Deleting the zip file." />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ========================================================================================= -->
                    <!-- 4) Delete the zip files and the folder containing the new artifacts  -->
                    <!-- ========================================================================================= -->
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <executions>
                            <execution>
                                <id>clean-new-resources</id>
                                <phase>verify</phase>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${resources.folder}</directory>
                                            <includes>
                                                <include>${artifacts.folder}/**/*.*</include>
                                                <include>${artifacts.folder}</include>
                                                <include>sealights-java-${sealights.version}/**/*.*</include>
                                                <include>sealights-java-${sealights.version}/</include>
                                                <include>sealights-java-${sealights.version}.tgz/</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
